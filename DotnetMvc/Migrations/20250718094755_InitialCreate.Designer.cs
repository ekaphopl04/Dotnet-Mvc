// <auto-generated />
using System;
using DotnetMvc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DotnetMvc.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250718094755_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DotnetMvc.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Comic books featuring superheroes and their adventures",
                            Name = "Superhero"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Japanese comic books and graphic novels",
                            Name = "Manga"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Comic books with science fiction themes",
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Comic books with fantasy elements and worlds",
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Comic books with horror and supernatural themes",
                            Name = "Horror"
                        });
                });

            modelBuilder.Entity("DotnetMvc.Models.ComicBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("CoverImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<int?>("PageCount")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("PublicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ComicBooks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Artist = "David Mazzucchelli",
                            Author = "Frank Miller",
                            CategoryId = 1,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Batman's early days fighting crime in Gotham City",
                            IsAvailable = true,
                            Price = 19.99m,
                            Title = "Batman: Year One"
                        },
                        new
                        {
                            Id = 2,
                            Artist = "Eiichiro Oda",
                            Author = "Eiichiro Oda",
                            CategoryId = 2,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Monkey D. Luffy and his pirate crew search for the greatest treasure, the One Piece",
                            IsAvailable = true,
                            Price = 9.99m,
                            Title = "One Piece"
                        },
                        new
                        {
                            Id = 3,
                            Artist = "Fiona Staples",
                            Author = "Brian K. Vaughan",
                            CategoryId = 3,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Epic space opera/fantasy comic book series",
                            IsAvailable = true,
                            Price = 14.99m,
                            Title = "Saga"
                        },
                        new
                        {
                            Id = 4,
                            Artist = "Sam Kieth",
                            Author = "Neil Gaiman",
                            CategoryId = 4,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The Lord of Dreams has been imprisoned for decades and must reclaim his power",
                            IsAvailable = true,
                            Price = 24.99m,
                            Title = "The Sandman"
                        },
                        new
                        {
                            Id = 5,
                            Artist = "Junji Ito",
                            Author = "Junji Ito",
                            CategoryId = 5,
                            CreatedDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A town is haunted by a supernatural spiral pattern",
                            IsAvailable = true,
                            Price = 22.99m,
                            Title = "Uzumaki"
                        });
                });

            modelBuilder.Entity("DotnetMvc.Models.ComicBook", b =>
                {
                    b.HasOne("DotnetMvc.Models.Category", "Category")
                        .WithMany("ComicBooks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DotnetMvc.Models.Category", b =>
                {
                    b.Navigation("ComicBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
