@{
    ViewData["Title"] = "Test API Features";
}

<div class="container-fluid mt-4">
    <h1 class="mb-4">üöÄ Test API Features - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå API</h1>
    
    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5>üìã API Feature Tests</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <h6>1. Action Return Types - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£ Return ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h6>
                        <button class="btn btn-outline-primary btn-sm" onclick="testReturnTypes()">Test Return Types</button>
                        <small class="text-muted d-block">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ ActionResult&lt;T&gt; ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£ return ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ</small>
                    </div>

                    <div class="mb-3">
                        <h6>2. JSON Patch Requests - ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô</h6>
                        <div class="input-group mb-2">
                            <input type="number" id="patchId" class="form-control" placeholder="Item ID" value="1">
                            <button class="btn btn-outline-warning" onclick="testJsonPatch()">Test JSON Patch</button>
                        </div>
                        <small class="text-muted">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏î‡πâ‡∏ß‡∏¢ JSON Patch</small>
                    </div>

                    <div class="mb-3">
                        <h6>3. Format Response Data - ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h6>
                        <div class="btn-group" role="group">
                            <button class="btn btn-outline-info btn-sm" onclick="testFormatResponse('standard')">Standard</button>
                            <button class="btn btn-outline-info btn-sm" onclick="testFormatResponse('minimal')">Minimal</button>
                            <button class="btn btn-outline-info btn-sm" onclick="testFormatResponse('detailed')">Detailed</button>
                            <button class="btn btn-outline-info btn-sm" onclick="testFormatResponse('xml')">XML</button>
                        </div>
                        <small class="text-muted d-block">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ</small>
                    </div>

                    <div class="mb-3">
                        <h6>4. Error Handling - ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h6>
                        <div class="btn-group" role="group">
                            <button class="btn btn-outline-danger btn-sm" onclick="testErrorHandling('validation')">Validation</button>
                            <button class="btn btn-outline-danger btn-sm" onclick="testErrorHandling('notfound')">Not Found</button>
                            <button class="btn btn-outline-danger btn-sm" onclick="testErrorHandling('unauthorized')">Unauthorized</button>
                            <button class="btn btn-outline-danger btn-sm" onclick="testErrorHandling('exception')">Exception</button>
                        </div>
                        <small class="text-muted d-block">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ</small>
                    </div>

                    <div class="mb-3">
                        <h6>5. Custom Formatters - ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á</h6>
                        <button class="btn btn-outline-success btn-sm" onclick="testCustomFormat()">Test Custom Format</button>
                        <small class="text-muted d-block">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á</small>
                    </div>

                    <div class="mb-3">
                        <h6>6. Create New Item - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <input type="text" id="itemName" class="form-control mb-2" placeholder="Item Name">
                            </div>
                            <div class="col-md-6">
                                <input type="text" id="itemDesc" class="form-control mb-2" placeholder="Description">
                            </div>
                        </div>
                        <button class="btn btn-outline-success btn-sm" onclick="testCreateItem()">Create Item</button>
                        <small class="text-muted d-block">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° Validation</small>
                    </div>

                    <div class="mb-3">
                        <h6>7. Get All Items - ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h6>
                        <div class="input-group">
                            <input type="number" id="pageNum" class="form-control" placeholder="Page" value="1">
                            <input type="number" id="pageSize" class="form-control" placeholder="Page Size" value="10">
                            <button class="btn btn-outline-primary" onclick="testGetAll()">Get All</button>
                        </div>
                        <small class="text-muted">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏° Pagination</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h5>üìä API Response - ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å API</h5>
                </div>
                <div class="card-body">
                    <div id="loading" class="text-center" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API...</p>
                    </div>
                    <pre id="apiResponse" class="bg-light p-3" style="max-height: 500px; overflow-y: auto;">
‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Features

Click any button above to test API features
                    </pre>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h5>üìö API Documentation - ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö API</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6>üîß Available Endpoints:</h6>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    <code>GET /api/testapi/return-types</code>
                                    <br><small class="text-muted">‡∏ó‡∏î‡∏™‡∏≠‡∏ö Action Return Types</small>
                                </li>
                                <li class="list-group-item">
                                    <code>PATCH /api/testapi/json-patch/{id}</code>
                                    <br><small class="text-muted">‡∏ó‡∏î‡∏™‡∏≠‡∏ö JSON Patch requests</small>
                                </li>
                                <li class="list-group-item">
                                    <code>GET /api/testapi/formatted-response</code>
                                    <br><small class="text-muted">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</small>
                                </li>
                                <li class="list-group-item">
                                    <code>GET /api/testapi/error-handling/{type}</code>
                                    <br><small class="text-muted">‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</small>
                                </li>
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <h6>üìã More Endpoints:</h6>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    <code>GET /api/testapi/custom-format</code>
                                    <br><small class="text-muted">‡∏ó‡∏î‡∏™‡∏≠‡∏ö Custom Formatters</small>
                                </li>
                                <li class="list-group-item">
                                    <code>POST /api/testapi/create</code>
                                    <br><small class="text-muted">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà</small>
                                </li>
                                <li class="list-group-item">
                                    <code>GET /api/testapi/{id}</code>
                                    <br><small class="text-muted">‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° ID</small>
                                </li>
                                <li class="list-group-item">
                                    <code>GET /api/testapi</code>
                                    <br><small class="text-muted">‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏° Pagination</small>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const apiBase = '/api/testapi';
    const responseElement = document.getElementById('apiResponse');
    const loadingElement = document.getElementById('loading');

    function showLoading() {
        loadingElement.style.display = 'block';
        responseElement.style.display = 'none';
    }

    function hideLoading() {
        loadingElement.style.display = 'none';
        responseElement.style.display = 'block';
    }

    function displayResponse(data, status = 200) {
        const timestamp = new Date().toLocaleString('th-TH');
        const statusText = status >= 200 && status < 300 ? '‚úÖ SUCCESS' : '‚ùå ERROR';
        
        responseElement.innerHTML = `[${timestamp}] ${statusText} (${status})
        
${JSON.stringify(data, null, 2)}`;
        hideLoading();
    }

    async function makeApiCall(url, options = {}) {
        showLoading();
        try {
            const response = await fetch(url, {
                headers: {
                    'Content-Type': 'application/json',
                    ...options.headers
                },
                ...options
            });
            
            const data = await response.json();
            displayResponse(data, response.status);
        } catch (error) {
            displayResponse({
                error: error.message,
                message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API'
            }, 500);
        }
    }

    // 1. Test Return Types
    function testReturnTypes() {
        makeApiCall(`${apiBase}/return-types`);
    }

    // 2. Test JSON Patch
    function testJsonPatch() {
        const id = document.getElementById('patchId').value || 1;
        const patchData = [
            {
                "op": "replace",
                "path": "/name",
                "value": "Updated Name via JSON Patch"
            },
            {
                "op": "replace", 
                "path": "/description",
                "value": "‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏î‡πâ‡∏ß‡∏¢ JSON Patch"
            }
        ];

        makeApiCall(`${apiBase}/json-patch/${id}`, {
            method: 'PATCH',
            body: JSON.stringify(patchData),
            headers: {
                'Content-Type': 'application/json-patch+json'
            }
        });
    }

    // 3. Test Format Response
    function testFormatResponse(format) {
        makeApiCall(`${apiBase}/formatted-response?format=${format}`);
    }

    // 4. Test Error Handling
    function testErrorHandling(type) {
        makeApiCall(`${apiBase}/error-handling/${type}`);
    }

    // 5. Test Custom Format
    function testCustomFormat() {
        makeApiCall(`${apiBase}/custom-format`);
    }

    // 6. Test Create Item
    function testCreateItem() {
        const name = document.getElementById('itemName').value || 'Test Item';
        const description = document.getElementById('itemDesc').value || 'Test Description';
        
        const newItem = {
            name: name,
            description: description,
            isActive: true
        };

        makeApiCall(`${apiBase}/create`, {
            method: 'POST',
            body: JSON.stringify(newItem)
        });
    }

    // 7. Test Get All
    function testGetAll() {
        const page = document.getElementById('pageNum').value || 1;
        const pageSize = document.getElementById('pageSize').value || 10;
        
        makeApiCall(`${apiBase}?page=${page}&pageSize=${pageSize}`);
    }

    // Initialize with a welcome message
    document.addEventListener('DOMContentLoaded', function() {
        displayResponse({
            message: "üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà API Test Page",
            description: "‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå API ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
            features: [
                "Action Return Types",
                "JSON Patch Requests", 
                "Format Response Data",
                "Error Handling",
                "Custom Formatters",
                "Data Validation",
                "Pagination"
            ],
            timestamp: new Date().toISOString()
        });
    });
</script>

<style>
    .card {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border: none;
        margin-bottom: 20px;
    }
    
    .btn-group .btn {
        margin-right: 5px;
        margin-bottom: 5px;
    }
    
    pre {
        font-size: 12px;
        border-radius: 5px;
    }
    
    .list-group-item {
        border: none;
        padding: 8px 0;
    }
    
    .list-group-item code {
        background-color: #f8f9fa;
        padding: 2px 6px;
        border-radius: 3px;
        font-size: 11px;
    }
</style>
